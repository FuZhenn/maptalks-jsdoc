<?js
var data = obj;
var self = this;
var events = null;
if (data.kind === 'class') {
    events = self.find({kind: 'event', memberof: data.longname});
}
?>
<?js
    if (data.kind !== 'module') {
        var methodName = name;
        var isConstructor = false;
        if (data.kind === 'class') {methodName = longname;}
        if (data.kind === 'class' && data.classdesc) {
            isConstructor = true;
        }
?>
    <!-- <h2>Constructor</h2> -->
    <?js if (!isConstructor) { ?>
    <li>
    <?js } ?>
    <h4 class="name" id="<?js= id ?>"><?js= data.attribs + (data.inherited?'<i><span class="type-signature">(inherited) </span>':'') + (kind === 'class' ? 'new ' : '') +
    '<a href="#' + id + '">' + methodName + '</a>' + (data.signature || '') + (data.inherited?'</i>':'')?>
    <?js if (data.meta && self.outputSourceFiles) {?>
        <?js if (self.github) { ?>
            <?js= self.linkto(self.github+meta.shortpath, '[source]', 'improvelink', 'L' + meta.lineno).replace(' href',' target="_blank" href') ?>
        <?js } else { ?>
            <?js= self.linkto(meta.shortpath, [source], 'improvelink', 'line' + meta.lineno) ?>
        <?js } ?>
    <?js } ?>
    <!-- <?js if (self.github) { ?>
        <?js= self.linkto(self.github+data.meta.shortpath, '[help to improve]', 'improvelink', 'L' + data.meta.lineno).replace('/blob/','/edit/').replace(' href',' target="_blank" href') ?>
    <?js } ?> -->
    <!-- <a href="#<?js= id ?>" class="improvelink">[link]</a> -->
    </h4>

    <?js if (!isConstructor) { ?>
    </li>
    <?js } ?>
    <?js if (data.summary) { ?>
        <p class="summary"><?js= summary ?></p>
    <?js } ?>

<?js } ?>

<?js if (data.kind !== 'module' && data.description) { ?>
<div class="description">
    <?js= data.description ?>
</div>
<?js } ?>
<?js if (data.examples && examples.length) { ?>
    <!--<h5>Example<?js= examples.length > 1? 's':'' ?>:</h5>-->
    <?js= this.partial('examples.tmpl', examples) ?>
<?js } ?>


<!-- <?js if (data.kind === 'event' && data.type && data.type.names) {?>
    <h5>Type:</h5>
    <ul>
        <li>
            <?js= self.partial('type.tmpl', data.type.names) ?>
        </li>
    </ul>
<?js } ?> -->

<?js if (data['this']) { ?>
    <h5>This:</h5>
    <ul><li><?js= this.linkto(data['this'], data['this']) ?></li></ul>
<?js } ?>

<?js if (data.params && params.length) { ?>
    <?js= this.partial('params.tmpl', params) ?>
<?js } ?>

<!-- event properties -->

<?js if (data.kind !== 'event' && data.properties && properties.length) { ?>
    <?js= this.partial('event-properties.tmpl', properties) ?>
<?js } ?>

<?js if (data.augments /**&& data.alias && data.alias.indexOf('module:') === 0**/) { ?>
    <h5>Extends:</h5>
    <?js= self.partial('augments.tmpl', data) ?>
<?js } ?>

<?js= this.partial('details.tmpl', data) ?>

<?js if (data.kind !== 'module' && data.requires && data.requires.length) { ?>
<h5>Requires:</h5>
<ul><?js data.requires.forEach(function(r) { ?>
    <li><?js= self.linkto(r) ?></li>
<?js }); ?></ul>
<?js } ?>

<?js if (events && events.length) { ?>
<h5>Fires:</h5>
<ul><?js events.forEach(function(f) { ?>
    <li><a href="#<?js= f.id ?>"><?js= f.name ?></a></li>
<?js }); ?></ul>
<?js } ?>


<?js if (data.fires && fires.length) { ?>
<h5>Fires:</h5>
<ul><?js fires.forEach(function(f) { ?>
    <li><a href="#event:<?js= f.split(':')[1] ?>"><?js= f.split(':')[1] ?></a></li>
<?js }); ?></ul>
<?js } ?>

<?js if (data.listens && listens.length) { ?>
<h5>Listens to Events:</h5>
<ul><?js listens.forEach(function(f) { ?>
    <li><?js= self.linkto(f) ?></li>
<?js }); ?></ul>
<?js } ?>

<?js if (data.listeners && listeners.length) { ?>
<h5>Listeners of This Event:</h5>
<ul><?js listeners.forEach(function(f) { ?>
    <li><?js= self.linkto(f) ?></li>
<?js }); ?></ul>
<?js } ?>

<?js if (data.exceptions && exceptions.length) { ?>
<h5>Throws:</h5>
<?js if (exceptions.length > 1) { ?><ul><?js
    exceptions.forEach(function(r) { ?>
        <li><?js= self.partial('exceptions.tmpl', r) ?></li>
    <?js });
?></ul><?js } else {
    exceptions.forEach(function(r) { ?>
        <?js= self.partial('exceptions.tmpl', r) ?>
    <?js });
} } ?>

<?js if (data.returns && returns.length) { ?>
<h5>Returns:</h5>
<?js= (data.returnTypes + ':' || '') ?>
<?js if (returns.length > 1) { ?><ul><?js
    returns.forEach(function(r) { ?>
        <li><?js= self.partial('returns.tmpl', r) ?></li>
    <?js });
?></ul><?js } else {
    returns.forEach(function(r) { ?>
        <?js= self.partial('returns.tmpl', r) ?>
    <?js });
} } ?>


<hr>